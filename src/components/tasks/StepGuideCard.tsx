import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Lightbulb, ArrowRight } from 'lucide-react';
import { TaskStep } from '@/hooks/_deprecated/types/taskStepTypes';

interface StepGuideCardProps {
  step: TaskStep;
}

const getStepGuidance = (title: string, description: string) => {
  const titleLower = title.toLowerCase();
  const descLower = description.toLowerCase();
  
  if (titleLower.includes('caracterÃ­sticas') || titleLower.includes('features')) {
    return {
      purpose: "Identificar quÃ© hace Ãºnicos tus productos o servicios",
      examples: [
        "Materiales: Â¿Usas materiales especiales o de alta calidad?",
        "Proceso: Â¿Tienes una tÃ©cnica Ãºnica de fabricaciÃ³n?",
        "DiseÃ±o: Â¿QuÃ© estilo o estÃ©tica te caracteriza?",
        "PersonalizaciÃ³n: Â¿Ofreces productos hechos a medida?"
      ],
      tip: "Piensa en lo que tus clientes mencionan cuando hablan de ti. Â¿QuÃ© los hace elegirte a ti en lugar de la competencia?"
    };
  }
  
  if (titleLower.includes('beneficios') || titleLower.includes('benefits')) {
    return {
      purpose: "Explicar cÃ³mo tus productos mejoran la vida de tus clientes",
      examples: [
        "Ahorro de tiempo: Â¿Les facilitas alguna tarea?",
        "Experiencia emocional: Â¿CÃ³mo se sienten al usar tus productos?",
        "SoluciÃ³n de problemas: Â¿QuÃ© problema especÃ­fico resuelves?",
        "Estatus o imagen: Â¿CÃ³mo mejoras su imagen personal?"
      ],
      tip: "No describas QUÃ‰ haces, sino CÃ“MO beneficia a tus clientes. EnfÃ³cate en el resultado final que obtienen."
    };
  }
  
  if (titleLower.includes('precio') || titleLower.includes('pricing')) {
    return {
      purpose: "Definir una estrategia de precios rentable y competitiva",
      examples: [
        "Costos: Materiales + tiempo + margen de ganancia",
        "Mercado: Â¿CuÃ¡nto cobran productos similares?",
        "Valor percibido: Â¿Justifica el precio la calidad?",
        "Posicionamiento: Â¿Eres premium, accesible o econÃ³mico?"
      ],
      tip: "Considera el valor que entregas, no solo los costos. Un producto Ãºnico puede justificar un precio mÃ¡s alto."
    };
  }
  
  return {
    purpose: "Completar este paso te acercarÃ¡ a tu objetivo de negocio",
    examples: [
      "SÃ© especÃ­fico y concreto en tus respuestas",
      "Piensa en ejemplos reales de tu experiencia",
      "Considera quÃ© dirÃ­an tus clientes actuales",
      "EnfÃ³cate en lo que te hace diferente"
    ],
    tip: "TÃ³mate tu tiempo para reflexionar. Una buena respuesta aquÃ­ mejorarÃ¡ significativamente tu resultado final."
  };
};

export const StepGuideCard: React.FC<StepGuideCardProps> = ({ step }) => {
  const guidance = getStepGuidance(step.title, step.description);

  return (
    <Card className="bg-amber-50/50 border-amber-200/50">
      <CardHeader className="pb-3">
        <div className="flex items-center gap-2">
          <Lightbulb className="h-4 w-4 text-amber-600" />
          <CardTitle className="text-sm text-amber-800">GuÃ­a para este paso</CardTitle>
        </div>
      </CardHeader>
      <CardContent className="space-y-3">
        <div>
          <p className="text-sm font-medium text-amber-900 mb-2">
            {guidance.purpose}
          </p>
        </div>
        
        <div className="space-y-2">
          <p className="text-xs font-medium text-amber-800">Ejemplos de quÃ© incluir:</p>
          <ul className="space-y-1">
            {guidance.examples.map((example, index) => (
              <li key={index} className="flex items-start gap-2 text-xs text-amber-700">
                <ArrowRight className="h-3 w-3 mt-0.5 flex-shrink-0" />
                <span>{example}</span>
              </li>
            ))}
          </ul>
        </div>
        
        <div className="pt-2 border-t border-amber-200">
          <p className="text-xs text-amber-600 font-medium">
            ðŸ’¡ {guidance.tip}
          </p>
        </div>
      </CardContent>
    </Card>
  );
};